
[game]

# Screen height and width (untested with other values)
SCREEN_WIDTH = 1200
SCREEN_HEIGHT = 700

# Whether or not to play music
PLAY_MUSIC = 1

# How far off to the right of the screen you can go before losing (in pixels)
GRACE_ZONE = 250

# Default friction for objects
DEFAULT_FRICTION_AMT = .5

# Downward gravity (negative will cause things to drop upwards)
GRAV_VERT = 200
# Left / right gravity (negative will pull things to the right)
GRAV_HORIZ = -300


[projectile]

# Every tick, the game rolls a number between 1 and 1000. 
# If the number is less than (PROJECTILE_SPAWN_CHANCE_BASE + (<current level-1> * PROJECTILE_SPAWN_CHANCE_LEVEL),
# a projectile is spawned. 
PROJECTILE_SPAWN_CHANCE_BASE = 70
PROJECTILE_SPAWN_CHANCE_LEVEL= 5


# The Y value (pixels) of newly spawned projectiles will be between these values
PROJECTILE_INITIAL_Y_LOW  = 100
PROJECTILE_INITIAL_Y_HIGH = 600

# How heavy projectiles are at the beginning of the game
PROJECTILE_MASS_INITIAL = 15

# How much each additional level adds to the mass
PROJECTILE_MASS_INCREMENT = 10

# controls bouncieness of projectiles (between 0 and .99)
PROJECTILE_ELASTICITY = .5

# Base size of projectile
PROJECTILE_SIZE_BASE = 1

# How much each additional level adds onto the base projectile size (decimals OK)
PROJECTILE_SIZE_LEVEL_MODIFIER = 0

# Controls the starting velocity of projectiles (picks a random integer between the high and low values)
PROJECTILE_X_VELOCITY_LOW  = 400
PROJECTILE_X_VELOCITY_HIGH = 550

PROJECTILE_Y_VELOCITY_LOW  = 15
PROJECTILE_Y_VELOCITY_HIGH = 150


[player]
# Starting X velocity of the player (negative is left)
PLAYER_STARTING_VELOCITY = -150

PLAYER_VELOCITY_SIDEWAYS_MAX = 150

# Max angular velocity
PLAYER_VELOCITY_ANGULAR_MAX = 8

# How much angular velocity each click of the rotate buttons will cause
PLAYER_VELOCITY_ANGULAR_AMT = 3

# Velocity of dashing (ignores the sideways max velocity)
PLAYER_VELOCITY_DASH_X = -700
PLAYER_VELOCITY_DASH_Y = 100

# How close to the ground your feet have to be to jump (pixels)
PLAYER_JUMP_THRESHHOLD = 100

# How much vertical velocity a jump adds
PLAYER_VELOCITY_JUMP_AMT = 350

# Mass of the player
PLAYER_MASS = 100

# Amount of energy player starts with
PLAYER_ENERGY_START = 50

# How much energy the player gets each tick
PLAYER_ENERGY_PER_TICK = .2

# Maximum amount of energy the player is allowed
PLAYER_ENERGY_MAX = 100

# How much energy it costs to move
PLAYER_ENERGY_MOVE_COST = 0

# How much energy it costs to rotate
PLAYER_ENERGY_SPIN_COST = 0

# How much energy it costs to jump
PLAYER_ENERGY_JUMP_COST = 5

# How much energy the "dash" move costs
PLAYER_ENERGY_DASH_COST = 100




